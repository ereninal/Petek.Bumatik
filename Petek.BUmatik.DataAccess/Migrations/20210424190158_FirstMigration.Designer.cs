// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Petek.BUmatik.DataAccess.Concrete.EntitiyFramework;

namespace Petek.BUmatik.DataAccess.Migrations
{
    [DbContext(typeof(BUmatikContext))]
    [Migration("20210424190158_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Member"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Student.Add"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Student.GetById"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Student.Delete"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Student.Update"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Parent.Add"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Parent.Delete"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Parent.Update"
                        });
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Parents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            Email = "ereninal10@gmail.com",
                            FullName = "Eren İNAL",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 197, 52, 181, 26, 41, 155, 245, 40, 240, 60, 106, 233, 122, 28, 147, 161, 108, 235, 32, 208, 108, 10, 105, 211, 250, 17, 58, 148, 90, 133, 131, 178, 212, 202, 81, 200, 250, 120, 31, 102, 193, 218, 193, 248, 97, 75, 44, 110, 173, 224, 39, 28, 110, 92, 67, 237, 85, 65, 213, 59, 134, 243, 5, 29 },
                            PasswordSalt = new byte[] { 91, 223, 111, 121, 21, 167, 54, 85, 65, 199, 240, 70, 30, 26, 123, 65, 171, 37, 88, 153, 69, 0, 20, 24, 97, 199, 184, 8, 142, 112, 29, 173, 42, 208, 146, 90, 140, 16, 213, 171, 75, 4, 15, 185, 15, 137, 220, 116, 159, 233, 166, 3, 212, 124, 9, 172, 113, 54, 42, 82, 220, 85, 17, 49, 146, 168, 40, 113, 34, 66, 28, 210, 142, 152, 200, 21, 83, 152, 206, 28, 183, 180, 59, 18, 40, 247, 85, 28, 205, 178, 227, 186, 17, 101, 51, 142, 169, 134, 171, 123, 254, 232, 84, 149, 126, 121, 39, 233, 178, 41, 136, 59, 252, 199, 205, 179, 21, 100, 90, 173, 43, 164, 94, 158, 164, 141, 198, 156 }
                        });
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("TownId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 42,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Selçuk Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 2,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Beykent Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 3,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Sabancı Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 4,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Koç Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 5,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Yıldız Teknik Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 6,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "İstanbul Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 7,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "İstanbul Teknik Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 8,
                            CityId = 61,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Karadeniz Teknik Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 9,
                            CityId = 35,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Ege Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 10,
                            CityId = 42,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Konya Teknik Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 11,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Kocaeli Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 12,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Gebze Teknik Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 13,
                            CityId = 67,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Fırat Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 14,
                            CityId = 59,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Namık Kemal Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 15,
                            CityId = 22,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Trakya Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 16,
                            CityId = 1,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Ankara Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 17,
                            CityId = 1,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Orta Doğu Teknik Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 18,
                            CityId = 1,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Bilkent Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 19,
                            CityId = 17,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Çanakkale 18 Mart Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 20,
                            CityId = 32,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Süleyman Demirel Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 21,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "İstanbul Aydın Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 22,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Nişantaşı Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 23,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Marmara Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 24,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Boğaziçi Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 25,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Gelişim Üniversitesi",
                            TownId = 0
                        },
                        new
                        {
                            Id = 26,
                            CityId = 34,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            Name = "Milli Savunma Üniversitesi",
                            TownId = 0
                        });
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("BandNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("ModifieUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("integer");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RemainingMoney")
                        .HasColumnType("numeric");

                    b.Property<int>("SchoolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BandNumber = "11111",
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            FullName = "Mira İNAL",
                            IsDeleted = false,
                            ParentId = 1,
                            RemainingMoney = 50m,
                            SchoolId = 1
                        },
                        new
                        {
                            Id = 2,
                            BandNumber = "22222",
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            FullName = "Aras İNAL",
                            IsDeleted = false,
                            ParentId = 1,
                            RemainingMoney = 50m,
                            SchoolId = 2
                        });
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("integer");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("integer");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("ParentId");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            OperationClaimId = 1,
                            ParentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 1,
                            IsDeleted = false,
                            OperationClaimId = 2,
                            ParentId = 1
                        });
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.Student", b =>
                {
                    b.HasOne("Petek.BUmatik.Entities.Concrete.Parent", "Parents")
                        .WithMany("Students")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Petek.BUmatik.Entities.Concrete.School", "Schools")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parents");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.HasOne("Petek.BUmatik.Entities.Concrete.OperationClaim", "OperationClaims")
                        .WithMany("OperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Petek.BUmatik.Entities.Concrete.Parent", "Parents")
                        .WithMany("OperationClaims")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaims");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.OperationClaim", b =>
                {
                    b.Navigation("OperationClaims");
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.Parent", b =>
                {
                    b.Navigation("OperationClaims");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Petek.BUmatik.Entities.Concrete.School", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
